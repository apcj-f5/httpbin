FROM alpine:3.11 AS builder

ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8
ENV unitver=1.14.0
ENV sha512=0cfe5364d427ff09d08c3b1b134827665f8bf70b8871f3c4506680e4c2d61249a53581122c42276b590f5eb077c398ae6a6c2fa46f24c680844b7d365f2ca66b

WORKDIR /build

RUN apk add --no-cache --virtual .build-deps \
          alpine-sdk \
          bash \
          curl \
          git \
          libffi-dev \
          openssl-dev \
          python3-dev

RUN curl -LO https://unit.nginx.org/download/unit-${unitver}.tar.gz \
&&  echo -n "${sha512}  unit-${unitver}.tar.gz" \
    | sha512sum -c - || exit 1

RUN tar xzf unit-${unitver}.tar.gz \
&&  ln -s unit-${unitver} unit \
&&  cd unit \
&&  ./configure \
        --prefix="/usr" \
        --state="/var/lib/unit" \
        --control="unix:/run/control.unit.sock" \
        --pid="/run/unit.pid" \
        --log="/var/log/unit.log" \
        --modules="/usr/lib/unit/modules" \
        --user=unit \
        --group=unit \
        --openssl \
        --tests \
    && ./configure python --config=python3-config \
    && make \
    && python3 test/run.py || true
# tests don't pass with ipv6 disabled in container, for now always pass :/

FROM alpine:3.10

LABEL name="httpbin"
LABEL version="0.9.2"
LABEL description="A simple HTTP service."

ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8

WORKDIR /httpbin
ADD . /httpbin

COPY --from=builder /build/unit/build/unitd /usr/sbin/
COPY --from=builder /build/unit/build/python3.unit.so /usr/lib/unit/modules/

RUN apk update --no-cache \
&&  apk add --no-cache \
        curl \
        libffi \
	libstdc++ \
        openssl \
        python3 \
&&  apk add --no-cache --virtual .build-deps \
        alpine-sdk \
        bash \
        git \
        libffi-dev \
        python3-dev \
&&  pip3 install --no-cache-dir \
        pipenv \
&&  bash -c "pip3 install --no-cache-dir -r <(pipenv lock -r)" \
&&  rm -rf \
        /root/.cache \
        /root/.local \
&&  find /usr/lib -name __pycache__ | xargs rm -rf \
&&  apk del .build-deps \
&&  ln -sf /dev/stdout /var/log/unit.log \
&&  ln -sf /dev/stdout /var/log/unit_access.log \
&&  addgroup -S unit 2>/dev/null \
&&  adduser -S -D -H -h /var/lib/unit -s /sbin/nologin -G unit -g "NGINX Unit" unit 2>/dev/null

ADD dockerfiles/alpine-unit/ /

EXPOSE 80 443

STOPSIGNAL SIGTERM

ENTRYPOINT ["/entrypoint.sh"]

CMD ["unitd", "--no-daemon", "--control", "unix:/run/control.unit.sock"]
